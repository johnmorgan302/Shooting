// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Shooting.Migrations
{
    [DbContext(typeof(ShootingContext))]
    [Migration("20210423181631_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("ChamberFirearm", b =>
                {
                    b.Property<int>("ChambersChamberID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FirearmsFirearmID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ChambersChamberID", "FirearmsFirearmID");

                    b.HasIndex("FirearmsFirearmID");

                    b.ToTable("ChamberFirearm");
                });

            modelBuilder.Entity("Shooting.Chamber", b =>
                {
                    b.Property<int>("ChamberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ChamberName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Wiki")
                        .HasColumnType("TEXT");

                    b.HasKey("ChamberID");

                    b.ToTable("Chamber");
                });

            modelBuilder.Entity("Shooting.Firearm", b =>
                {
                    b.Property<int>("FirearmID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirearmName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LeftSide")
                        .HasColumnType("TEXT");

                    b.Property<int>("ManufacturerID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RightSide")
                        .HasColumnType("TEXT");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Wiki")
                        .HasColumnType("TEXT");

                    b.HasKey("FirearmID");

                    b.HasIndex("ManufacturerID");

                    b.ToTable("Firearm");
                });

            modelBuilder.Entity("Shooting.LoadData", b =>
                {
                    b.Property<int>("LoadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChamberID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LoadName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Primer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Projectile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("ProjectileWeight")
                        .HasColumnType("REAL");

                    b.Property<string>("Propellent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("PropellentWeight")
                        .HasColumnType("REAL");

                    b.HasKey("LoadID");

                    b.HasIndex("ChamberID");

                    b.ToTable("LoadData");
                });

            modelBuilder.Entity("Shooting.Manufacturer", b =>
                {
                    b.Property<int>("ManufacturerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Logo")
                        .HasColumnType("TEXT");

                    b.Property<string>("ManufacturerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WebSite")
                        .HasColumnType("TEXT");

                    b.Property<string>("Wiki")
                        .HasColumnType("TEXT");

                    b.HasKey("ManufacturerID");

                    b.ToTable("Manufacturer");
                });

            modelBuilder.Entity("ChamberFirearm", b =>
                {
                    b.HasOne("Shooting.Chamber", null)
                        .WithMany()
                        .HasForeignKey("ChambersChamberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shooting.Firearm", null)
                        .WithMany()
                        .HasForeignKey("FirearmsFirearmID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Shooting.Firearm", b =>
                {
                    b.HasOne("Shooting.Manufacturer", "Manufacturer")
                        .WithMany("Firearms")
                        .HasForeignKey("ManufacturerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("Shooting.LoadData", b =>
                {
                    b.HasOne("Shooting.Chamber", "Chamber")
                        .WithMany("Loads")
                        .HasForeignKey("ChamberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chamber");
                });

            modelBuilder.Entity("Shooting.Chamber", b =>
                {
                    b.Navigation("Loads");
                });

            modelBuilder.Entity("Shooting.Manufacturer", b =>
                {
                    b.Navigation("Firearms");
                });
#pragma warning restore 612, 618
        }
    }
}
